# Docker Swarm stack compose file for Mailman 3 for COmanage Registry
#
# Portions licensed to the University Corporation for Advanced Internet
# Development, Inc. ("UCAID") under one or more contributor license agreements.
# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# UCAID licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at:
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This is an example compose file. Be sure to modify it as necessary
# for your own deployment.

version: '3.2'

services:
    mailman-core:
        image: sphericalcowgroup/mailman-core:0.1.7
        volumes:
            - /srv/docker/mailman/core:/opt/mailman/
        environment:
            - MAILMAN_DATABASE_URL_FILE=/run/secrets/mailman_database_url
            - MAILMAN_DATABASE_TYPE=postgres
            - MAILMAN_DATABASE_CLASS=mailman.database.postgresql.PostgreSQLDatabase
            - HYPERKITTY_API_KEY_FILE=/run/secrets/hyperkitty_api_key
            - MAILMAN_REST_USER=restadmin
            - MAILMAN_REST_PASSWORD_FILE=/run/secrets/mailman_rest_password
            - SMTP_HOST=postfix
            - SMTP_PORT=25
        stop_grace_period: 30s
        networks:
            - default
        secrets:
            - hyperkitty_api_key
            - mailman_database_url
            - mailman_rest_password

    mailman-web:
        image: sphericalcowgroup/mailman-web:0.1.7
        volumes:
            - /srv/docker/mailman/web:/opt/mailman-web-data
        environment:
            - MAILMAN_DATABASE_URL_FILE=/run/secrets/mailman_database_url
            - MAILMAN_DATABASE_TYPE=postgres
            - HYPERKITTY_API_KEY_FILE=/run/secrets/hyperkitty_api_key
            - SERVE_FROM_DOMAIN=lists-dev.sphericalcowgroup.com
            - MAILMAN_ADMIN_USER=mailman_admin
            - MAILMAN_ADMIN_EMAIL=skoranda@gmail.com
            - MAILMAN_WEB_SECRET_KEY_FILE=/run/secrets/mailman_web_secret_key
            - MAILMAN_REST_USER=restadmin
            - MAILMAN_REST_PASSWORD_FILE=/run/secrets/mailman_rest_password
            - SMTP_HOST=postfix
            - SMTP_PORT=25
        networks:
            - default
        secrets:
            - hyperkitty_api_key
            - mailman_database_url
            - mailman_rest_password
            - mailman_web_secret_key

    database:
        image: postgres:9.6
        volumes:
            - /srv/docker/mailman/database:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=mailmandb
            - POSTGRES_USER=mailman
            - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
        networks:
            - default
        secrets:
            - postgres_password

    postfix:
        image: sphericalcowgroup/mailman-postfix
        volumes:
            - /srv/docker/mailman:/opt/mailman
        environment:
            - POSTFIX_MAILNAME=lists-dev.sphericalcowgroup.com
        ports:
            - "25:25"
        networks:
            - default

    nginx:
        image: sphericalcowgroup/mailman-core-nginx
        volumes:
            - /srv/docker/mailman/web:/opt/mailman-web-data
        environment:
            - NGINX_HTTPS_CERT_FILE=/run/secrets/nginx_https_cert_file
            - NGINX_HTTPS_KEY_FILE=/run/secrets/nginx_https_key_file
            - NGINX_DH_PARAM_FILE=/run/secrets/nginx_dh_param_file
        secrets:
            - nginx_https_cert_file
            - nginx_https_key_file
            - nginx_dh_param_file
        networks:
            - default
        ports:
            - target: 443
              published: 443
              protocol: tcp
              # 'host' mode is necessary for nginx to receive the browser IP address
              # instead of the ingress network IP address. This is only a useful workaround
              # when not truly leveraging the load balancing capabilities of swarm mode.
              # Normally with more than a single mode swarm the upstream load balancer in
              # front of the swarm would be used for the definitive access log.
              # See discussion at https://github.com/moby/moby/issues/25526 .
              mode: host
            - target: 80
              published: 80
              protocol: tcp
              mode: host
        deploy:
            replicas: 1

secrets:
    hyperkitty_api_key:
        external: true
    mailman_database_url:
        external: true
    mailman_rest_password:
        external: true
    mailman_web_secret_key:
        external: true
    nginx_https_cert_file:
        external: true
    nginx_https_key_file:
        external: true
    nginx_dh_param_file:
        external: true
    postgres_password:
        external: true
